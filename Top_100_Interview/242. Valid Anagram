/*
Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?
*/



//cpp solution 1

class Solution {
public:
    bool isAnagram(string s, string t) {
        int sLength = s.size();
        int tLength = t.size();
        if(sLength != tLength) return false;
        char sList[26];
        char tList[26];
        for(int i = 0;i < 26;i ++){
            sList[i] = 0;
            tList[i] = 0;
        }
        for(int i = 0;i < sLength;i ++){
            sList[s[i]-'a']++;
            tList[t[i]-'a']++;
        }
        for(int i = 0;i < 26;i ++){
            if(sList[i] != tList[i]) return false;
        }
        return true;
    }
};


//cpp solution 2
